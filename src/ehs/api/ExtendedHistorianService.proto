syntax = "proto3";
option java_multiple_files = true;
package eu.ifak.ehs;
import "Commons.proto";

service ExtendedHistorianService {
    rpc ping (PingRequest) returns (PingResponse) {}
    rpc get_configuration(GetConfigurationRequest) returns (GetConfigurationResponse) {}
    rpc set_configuration(SetConfigurationRequest) returns (SetConfigurationResponse) {}
    rpc get_channels(GetChannelsRequest) returns (GetChannelsResponse) {}
    rpc get_values(GetValuesRequest) returns (GetValuesResponse) {}
    rpc get_histories(GetHistoriesRequest) returns (GetHistoriesResponse) {}

    // deprecated: use get_configuration
    rpc get_adapter_list(GetAdapterListRequest) returns (GetAdapterListResponse) {}
}


message SetConfigurationRequest {
    string configuration = 1;
}
message SetConfigurationResponse {
    Status status = 1;
}


message GetChannelsRequest {
}
message ChannelAddress {
    string adapter_name = 1;
    string channel_name = 2;
    string channel_type = 3;
}
message GetChannelsResponse {
    repeated ChannelAddress value = 1;
    Status status = 2;
}

message GetValuesRequest {
    repeated ChannelAddress channel_addresses = 1;
}
message GetValuesResponse {
    repeated ValueAndStatus value = 1;
    Status status = 2;
}


message GetHistoriesRequest {
    repeated ChannelAddress channel_addresses = 1;
    int64 begin_inclusive = 2;
    int64 end_exclusive = 3;
}
message TimeSeriesValue {
    int64 time = 1;
    Value value = 2;
}
message ListOfTimeSeriesValues {
    repeated TimeSeriesValue value = 1;
}
message GetHistoriesResponse {
    repeated ListOfTimeSeriesValues value = 1;
    Status status = 2;
}


// deprecated (use get_configuration instead):
message GetAdapterListRequest {
}
message GetAdapterListResponse {
    repeated AdapterInformation value = 1;
}
message AdapterInformation {
    string name = 1;             // stems from EHS configuration
    string description = 2;      // stems from EHS configuration
    string address = 3;          // 'address:port' stem from EHS configuration
    string port = 4;             // 'address:port' is unique
    bool can_provide_data = 5;   // adapter.ping() + device.ping() are successful
}
