# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import Commons_pb2 as Commons__pb2
from . import ExtendedHistorianService_pb2 as ExtendedHistorianService__pb2


class ExtendedHistorianServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ping = channel.unary_unary(
                '/eu.ifak.ehs.ExtendedHistorianService/ping',
                request_serializer=Commons__pb2.PingRequest.SerializeToString,
                response_deserializer=Commons__pb2.PingResponse.FromString,
                )
        self.get_configuration = channel.unary_unary(
                '/eu.ifak.ehs.ExtendedHistorianService/get_configuration',
                request_serializer=Commons__pb2.GetConfigurationRequest.SerializeToString,
                response_deserializer=Commons__pb2.GetConfigurationResponse.FromString,
                )
        self.set_configuration = channel.unary_unary(
                '/eu.ifak.ehs.ExtendedHistorianService/set_configuration',
                request_serializer=ExtendedHistorianService__pb2.SetConfigurationRequest.SerializeToString,
                response_deserializer=ExtendedHistorianService__pb2.SetConfigurationResponse.FromString,
                )
        self.get_channels = channel.unary_unary(
                '/eu.ifak.ehs.ExtendedHistorianService/get_channels',
                request_serializer=ExtendedHistorianService__pb2.GetChannelsRequest.SerializeToString,
                response_deserializer=ExtendedHistorianService__pb2.GetChannelsResponse.FromString,
                )
        self.get_values = channel.unary_unary(
                '/eu.ifak.ehs.ExtendedHistorianService/get_values',
                request_serializer=ExtendedHistorianService__pb2.GetValuesRequest.SerializeToString,
                response_deserializer=ExtendedHistorianService__pb2.GetValuesResponse.FromString,
                )
        self.get_histories = channel.unary_unary(
                '/eu.ifak.ehs.ExtendedHistorianService/get_histories',
                request_serializer=ExtendedHistorianService__pb2.GetHistoriesRequest.SerializeToString,
                response_deserializer=ExtendedHistorianService__pb2.GetHistoriesResponse.FromString,
                )
        self.get_adapter_list = channel.unary_unary(
                '/eu.ifak.ehs.ExtendedHistorianService/get_adapter_list',
                request_serializer=ExtendedHistorianService__pb2.GetAdapterListRequest.SerializeToString,
                response_deserializer=ExtendedHistorianService__pb2.GetAdapterListResponse.FromString,
                )


class ExtendedHistorianServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_configuration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_configuration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_channels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_values(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_histories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_adapter_list(self, request, context):
        """deprecated: use get_configuration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExtendedHistorianServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ping': grpc.unary_unary_rpc_method_handler(
                    servicer.ping,
                    request_deserializer=Commons__pb2.PingRequest.FromString,
                    response_serializer=Commons__pb2.PingResponse.SerializeToString,
            ),
            'get_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.get_configuration,
                    request_deserializer=Commons__pb2.GetConfigurationRequest.FromString,
                    response_serializer=Commons__pb2.GetConfigurationResponse.SerializeToString,
            ),
            'set_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.set_configuration,
                    request_deserializer=ExtendedHistorianService__pb2.SetConfigurationRequest.FromString,
                    response_serializer=ExtendedHistorianService__pb2.SetConfigurationResponse.SerializeToString,
            ),
            'get_channels': grpc.unary_unary_rpc_method_handler(
                    servicer.get_channels,
                    request_deserializer=ExtendedHistorianService__pb2.GetChannelsRequest.FromString,
                    response_serializer=ExtendedHistorianService__pb2.GetChannelsResponse.SerializeToString,
            ),
            'get_values': grpc.unary_unary_rpc_method_handler(
                    servicer.get_values,
                    request_deserializer=ExtendedHistorianService__pb2.GetValuesRequest.FromString,
                    response_serializer=ExtendedHistorianService__pb2.GetValuesResponse.SerializeToString,
            ),
            'get_histories': grpc.unary_unary_rpc_method_handler(
                    servicer.get_histories,
                    request_deserializer=ExtendedHistorianService__pb2.GetHistoriesRequest.FromString,
                    response_serializer=ExtendedHistorianService__pb2.GetHistoriesResponse.SerializeToString,
            ),
            'get_adapter_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_adapter_list,
                    request_deserializer=ExtendedHistorianService__pb2.GetAdapterListRequest.FromString,
                    response_serializer=ExtendedHistorianService__pb2.GetAdapterListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'eu.ifak.ehs.ExtendedHistorianService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExtendedHistorianService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eu.ifak.ehs.ExtendedHistorianService/ping',
            Commons__pb2.PingRequest.SerializeToString,
            Commons__pb2.PingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eu.ifak.ehs.ExtendedHistorianService/get_configuration',
            Commons__pb2.GetConfigurationRequest.SerializeToString,
            Commons__pb2.GetConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eu.ifak.ehs.ExtendedHistorianService/set_configuration',
            ExtendedHistorianService__pb2.SetConfigurationRequest.SerializeToString,
            ExtendedHistorianService__pb2.SetConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_channels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eu.ifak.ehs.ExtendedHistorianService/get_channels',
            ExtendedHistorianService__pb2.GetChannelsRequest.SerializeToString,
            ExtendedHistorianService__pb2.GetChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_values(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eu.ifak.ehs.ExtendedHistorianService/get_values',
            ExtendedHistorianService__pb2.GetValuesRequest.SerializeToString,
            ExtendedHistorianService__pb2.GetValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_histories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eu.ifak.ehs.ExtendedHistorianService/get_histories',
            ExtendedHistorianService__pb2.GetHistoriesRequest.SerializeToString,
            ExtendedHistorianService__pb2.GetHistoriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_adapter_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/eu.ifak.ehs.ExtendedHistorianService/get_adapter_list',
            ExtendedHistorianService__pb2.GetAdapterListRequest.SerializeToString,
            ExtendedHistorianService__pb2.GetAdapterListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
